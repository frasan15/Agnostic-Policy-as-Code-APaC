# This playbook installs nginx as a Docker container on remote hosts in the [webservers] group and mounts a volume
- name: "Provision an infrastructure on Docker"
  hosts: localhost
  tags: ['deploy']
  become: true
  tasks:
    - name: Pull nginx Docker image
      community.docker.docker_image:
        name: nginx
        source: pull

    - name: Create network
      community.docker.docker_network:
        name: network1
        ipam_config:
          - subnet: 192.168.111.0/24

    - name: Run server1 container
      community.docker.docker_container:
        name: server1
        image: nginx
        networks:
          - name: network1
            ipv4_address: "192.168.111.10"
        ports:
          - "0.0.0.0:8000:80"

    - name: Run server2 container
      community.docker.docker_container:
        name: server2
        image: nginx
        networks:
          - name: network1
            ipv4_address: "192.168.111.11"
        ports:
          - "255.255.255.255:8001:22"

    - name: Run server3 container
      community.docker.docker_container:
        name: server3
        image: nginx
        networks:
          - name: network1
            ipv4_address: "192.168.111.12"
        ports:
          - "0.0.0.0:8002:443"

- name: "Destroy infrastructure previously created on Docker"
  hosts: localhost
  tags: ['destroy']
  become: true
  tasks:
    - name: Remove container from all networks and destroy it
      community.docker.docker_container:
        name: server1
        comparisons:
          networks: strict
        state: absent

    - name: Remove container from all networks and destroy it
      community.docker.docker_container:
        name: server2
        comparisons:
          networks: strict
        state: absent

    - name: Remove container from all networks and destroy it
      community.docker.docker_container:
        name: server3
        comparisons:
          networks: strict
        state: absent

    - name: Delete a network, disconnecting all containers
      community.docker.docker_network:
        name: network1
        state: absent
        force: true
